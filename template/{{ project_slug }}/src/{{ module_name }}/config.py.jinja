"""
Application Configuration.

This module defines the settings for the application.
"""

{% if config_library == 'typed-settings' %}
import logging
from pathlib import Path

import typed_settings as ts


# Find the project root directory (which contains the .env file)
PROJECT_ROOT = Path(__file__).resolve().parent.parent.parent

@ts.settings(
    appname="{{ module_name }}",  # Env var prefix (e.g., {{ module_name | upper }}_LOG_LEVEL)
    config_files=[PROJECT_ROOT / ".env"],  # Load .env file from project root
    merge_Dashes=True,  # Allow MYAPP_LOG_LEVEL to match log_level
)
@ts.dataclass
class Settings:
    """
    Application settings, loaded from .env files and environment variables.
    """
    # Example setting:
    log_level: str = ts.option(
        default="INFO",
        help="The minimum log level (e.g., DEBUG, INFO, WARNING)."
    )
    # Add more settings here as needed:
    # api_key: str = ts.secret(default="", help="An example API key.")


# Load the settings instance
try:
    settings = ts.load_settings(Settings)
except (ts.ConfigError, FileNotFoundError) as e:
    logging.error(f"Error loading configuration: {e}")
    # Fallback to default settings on error
    settings = Settings()

{% elif config_library == 'pydantic-settings' %}
# This block is reserved for future pydantic-settings support.
# To enable it, you would add the dependency and uncomment/add code like:
#
# from pydantic_settings import BaseSettings, SettingsConfigDict
#
# class Settings(BaseSettings):
#     model_config = SettingsConfigDict(
#         env_file=".env",
#         env_file_encoding="utf-8",
#         env_prefix="{{ module_name }}_",
#         case_sensitive=False,
#     )
#
#     log_level: str = "INFO"
#     # api_key: str = ""
#
# settings = Settings()
pass

{% else %}
# No configuration library selected.
# You can define simple module-level variables here.
LOG_LEVEL = "INFO"
# API_KEY = "your_api_key_here"

# Or, if you need a settings object for consistency:
class Settings:
    log_level: str = LOG_LEVEL
    # api_key: str = API_KEY

settings = Settings()
{%- endif %}
